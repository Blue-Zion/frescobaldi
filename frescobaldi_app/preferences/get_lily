import urllib.request
import json
import platform

'''Open and read the .json''' 
url = "https://gitlab.com/api/v4/projects/18695663/releases"
response = urllib.request.urlopen(url)
content = response.read()
json_decode = json.loads(content.decode("utf8"))
result = []

'''Put what we have find from a specific directory in the .json into a dictionary '''
'''Then we filetre it to have a proper material to use'''
for item in json_decode:
    tag = item ['tag_name']
    if    tag == "release/2.22.2-1" :
        continue
        
    tag = tag.strip("v")# We just want numbers , so we erase the "v" 
    
    tagSplit = tag.split(".")   #Split each number (tuplet) 

    version = [int(v) for v in tagSplit]  #Convertion into integer

        
    result.append(version)#ajouter une fonction sort()) 
    
print (sorted(result))#sorted pour ordoner la liste

''' Build of the url to download the release chosen  depending of the operate systeme  '''


from urllib.parse import urlparse
                  
major, minor, micro = version

if platform.system() == 'Darwin' :
    lily_url = f"https://gitlab.com/lilypond/lilypond/-/releases/v{major}.{minor}.{micro}/downloads/lilypond-{major}.{minor}.{micro}-darwin-x86_64.tar.gz"

if platform.system() == 'Linux' :
    lily_url = f"https://gitlab.com/lilypond/lilypond/-/releases/v{major}.{minor}.{micro}/downloads/lilypond-{major}.{minor}.{micro}-linux-x86_64.tar.gz"

if platform.system() == 'Windows' :
    lily_url = f"https://gitlab.com/lilypond/lilypond/-/releases/v{major}.{minor}.{micro}/downloads/lilypond-{major}.{minor}.{micro}-mingw-x86_64.zip"


from urllib.parse import urlsplit

pathUrl = urlsplit(lily_url).path
urlSplit = pathUrl.split("/")
nameVersion = urlSplit [2] + urlSplit [5]
print("download compresed file name :", urlSplit [-1])

print("uncompressed file name :", nameVersion)

''' We download the compressed file in a tempory file'''

from urllib.request import urlopen
from tempfile import NamedTemporaryFile
from shutil import unpack_archive
from PyQt5.QtCore import QStandardPaths

with urlopen(lily_url) as urlSplit [-1], NamedTemporaryFile() as tfile:
    tfile.write((urlSplit [-1]).read())#error :Unknown archive format
    tfile.seek(0)
    
    with open(str(urlSplit [-1]), 'wb') as nameVersion :
        pathName = QStandardPaths.writableLocation(QStandardPaths.DataLocation)# construire le dossier QStandardPaths.writableLocation(QStandardPaths.DataLocation) 
        unpack_archive(tfile.name,pathName) #error :Unknown archive format
